{"version":3,"sources":["map.js","swiper-5.3.1/build/swiper.js","menu.js","modal.js","slider.js"],"names":["map","initMap","google","maps","Map","document","getElementById","center","lat","lng","zoom","Marker","position","title","global","factory","exports","module","define","amd","self","Swiper","this","doc","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","arr","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments$1","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","assign","args","len","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event$1","dom7LiveListeners","proxyListener","event","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","matchedItems","removeChild","toAdd","Object","keys","forEach","methodName","Utils","deleteProps","obj","object","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","params","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","extend","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","enumerable","Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","defineProperty","get","gestures","SwiperClass","eventsListeners","eventName","staticAccessors","components","configurable","priority","method","once","onceHandler","f7proxy","eventHandler","emit","Array","isArray","slice","useModulesParams","instanceParams","instance","modules","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","set","use","installModule","name","proto","static","install","m","concat","defineProperties","update","updateSize","width","height","swiper","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","newSlidesGrid","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","boxSizing$1","swiperSlideSize","centeredSlides","abs","slidesPerGroupSkip","effect","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize$1","allSlidesOffset","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","activeSlide","realIndex","slideActiveClass","loop","slideDuplicateClass","slideDuplicateActiveClass","nextSlide","slideNextClass","prevSlide","slidePrevClass","slideDuplicateNextClass","slideDuplicatePrevClass","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","destroyed","transition$1","transitionStart","direction","autoHeight","dir","slideTo","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","threshold","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","platform","ua","device","screenWidth","screenHeight","android","ipad","ipod","iphone","ie","edge","firefox","windows","electron","macos","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","ios","androidChrome","desktop","cordova","phonegap","toLowerCase","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","autoplay","running","paused","run","dummyEventAttached","dummyEventListener","defaults","init","touchEventsTarget","updateOnWindowResize","edgeSwipeDetection","edgeSwipeThreshold","freeMode","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideClass","slideBlankClass","wrapperClass","prototypes","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","diffX","diffY","sqrt","pow","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","time","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","moveDistance","currentSlideSize","stopIndex","groupSize","increment$1","ratio","navigation","nextEl","prevEl","onScroll","onClick","stopImmediatePropagation","start","move","end","passive","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","startsWith","minRatio","substr","innerHeight","sort","b","ref","innerWidth","wasLocked","lastSlidePosition","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","__proto__","spv","breakLoop","translateValue","newDirection","needUpdate","currentDirection","slideEl","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","observeSlideChildren","disconnect","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onPrevClick","onNextClick","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","pagination","click","message","notification","liveRegion","updateNavigation","updatePagination","clickable","bullets","bulletIndex","bulletEl","$bulletEl","paginationBulletMessage","Autoplay","$activeSlideEl","timeout","reverseDirection","stopOnLastSlide","stop","pause","waitForTransition","onTransitionEnd","hideOnClick","hiddenClass","toEdge","fromEdge","isHidden","notificationClass","paginationUpdate","disableOnInteraction","onVisibilityChange","visibilityState","beforeTransitionStart","sliderFirstMove","touchEnd","navButton","nav","onclick","orderButtons","modal","overlay","modalFormInputS","focus","buttons"],"mappings":"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","file":"script.min.js","sourcesContent":["// MAP\nvar map;\n\n// function initMap() {\n//   var coordinates = { lat: 47.212325, lng: 38.933663 },\n\n//     map = new google.maps.Map(document.getElementById(\"map\"), {\n//       center: coordinates\n//     });\n// }\n\nfunction initMap() {\n\n  // В переменной map создаем объект карты GoogleMaps и вешаем эту переменную на <div id=\"map\"></div>\n  map = new google.maps.Map(document.getElementById('map'), {\n    // При создании объекта карты необходимо указать его свойства\n    // center - определяем точку на которой карта будет центрироваться\n    center: { lat: -34.397, lng: 150.644 },\n    // zoom - определяет масштаб. 0 - видно всю платнеу. 18 - видно дома и улицы города.\n    zoom: 8\n  });\n\n  var marker = new google.maps.Marker({\n\n    // Определяем позицию маркера\n    position: { lat: 55.760186, lng: 37.618711 },\n\n    // Указываем на какой карте он должен появится. (На странице ведь может быть больше одной карты)\n    map: map,\n\n    // Пишем название маркера - появится если навести на него курсор и немного подождать\n    title: 'Наш маркер: Большой театр'\n  });\n}","/**\n * Swiper 5.3.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2020 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 27, 2020\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Swiper = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.1.3\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2019, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: February 11, 2019\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  function filter(callback) {\n    var matchedItems = [];\n    var dom = this;\n    for (var i = 0; i < dom.length; i += 1) {\n      if (callback.call(dom[i], i, dom[i])) { matchedItems.push(dom[i]); }\n    }\n    return new Dom7(matchedItems);\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    filter: filter,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!win.PointerEvent && ('maxTouchPoints' in win.navigator) && win.navigator.maxTouchPoints > 0,\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    function slidesForMargin(slideIndex) {\n      if (!params.cssMode) { return true; }\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n          var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n          var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n          var columnsInGroup = groupIndex === 0\n            ? params.slidesPerGroup\n            : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\n          column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide.css(\n          (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n          (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n        );\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal()\n            ? slide.outerWidth(true)\n            : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            var width = parseFloat(slideStyles.getPropertyValue('width'));\n            var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n            var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n            var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n            var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n            var boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n            }\n          } else {\n            var height = parseFloat(slideStyles.getPropertyValue('height'));\n            var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n            var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n            var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n            var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n            var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing$1 && boxSizing$1 === 'border-box') {\n              slideSize = height + marginTop + marginBottom;\n            } else {\n              slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n            }\n          }\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.filter(slidesForMargin).css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.filter(slidesForMargin).css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.filter(slidesForMargin).css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      var maxSnap = allSlidesSize - swiperSize;\n      snapGrid = snapGrid.map(function (snap) {\n        if (snap < 0) { return -offsetBefore; }\n        if (snap > maxSnap) { return maxSnap + offsetAfter; }\n        return snap;\n      });\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize$1 = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize$1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize$1 -= params.spaceBetween;\n      if (allSlidesSize$1 < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize$1) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                  || (slideAfter > 1 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress (translate) {\n    var swiper = this;\n    if (typeof translate === 'undefined') {\n      var multiplier = swiper.rtlTranslate ? -1 : 1;\n      // eslint-disable-next-line\n      translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n    }\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    if (swiper.initialized || swiper.runCallbacksOnInit) {\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n    if (params.cssMode) {\n      return translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var wrapperEl = swiper.wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\"));\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  function translateTo (translate, speed, runCallbacks, translateBounds, internal) {\n    var obj;\n\n    if ( translate === void 0 ) translate = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n    if ( translateBounds === void 0 ) translateBounds = true;\n    var swiper = this;\n\n    var params = swiper.params;\n    var wrapperEl = swiper.wrapperEl;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var minTranslate = swiper.minTranslate();\n    var maxTranslate = swiper.maxTranslate();\n    var newTranslate;\n    if (translateBounds && translate > minTranslate) { newTranslate = minTranslate; }\n    else if (translateBounds && translate < maxTranslate) { newTranslate = maxTranslate; }\n    else { newTranslate = translate; }\n\n    // Update progress\n    swiper.updateProgress(newTranslate);\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          wrapperEl.scrollTo(( obj = {}, obj[isH ? 'left' : 'top'] = -newTranslate, obj.behavior = 'smooth', obj ));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        }\n      }\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(newTranslate);\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionEnd');\n      }\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(newTranslate);\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionStart');\n      }\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.onTranslateToWrapperTransitionEnd = null;\n            delete swiper.onTranslateToWrapperTransitionEnd;\n            if (runCallbacks) {\n              swiper.emit('transitionEnd');\n            }\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n    translateTo: translateTo,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    if (!swiper.params.cssMode) {\n      swiper.$wrapperEl.transition(duration);\n    }\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.cssMode) { return; }\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    var params = swiper.params;\n    swiper.animating = false;\n    if (params.cssMode) { return; }\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    var obj;\n\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    var wrapperEl = swiper.wrapperEl;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          wrapperEl.scrollTo(( obj = {}, obj[isH ? 'left' : 'top'] = -translate, obj.behavior = 'smooth', obj ));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n        }\n      }\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      snapGrid.forEach(function (snap) {\n        if (!prevSnap && normalizedTranslate >= snap) { prevSnap = snap; }\n      });\n    }\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal, threshold) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n    if ( threshold === void 0 ) threshold = 0.5;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    if (translate >= swiper.snapGrid[snapIndex]) {\n      // The current translate is on or after the current snap index, so the choice\n      // is between the current index and the one after it.\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n      if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n        index += swiper.params.slidesPerGroup;\n      }\n    } else {\n      // The current translate is before the current snap index, so the choice\n      // is between the current index and the one before it.\n      var prevSnap = swiper.snapGrid[snapIndex - 1];\n      var currentSnap$1 = swiper.snapGrid[snapIndex];\n      if ((translate - prevSnap) <= (currentSnap$1 - prevSnap) * threshold) {\n        index -= swiper.params.slidesPerGroup;\n      }\n    }\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n\n    swiper.emit('beforeLoopFix');\n\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if (activeIndex >= slides.length - loopedSlides) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    swiper.emit('loopFix');\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \",.\" + (params.slideClass) + \".\" + (params.slideBlankClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var platform = win.navigator.platform;\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      edge: false,\n      ie: false,\n      firefox: false,\n      macos: false,\n      windows: false,\n      cordova: !!(win.cordova || win.phonegap),\n      phonegap: !!(win.cordova || win.phonegap),\n      electron: false,\n    };\n\n    var screenWidth = win.screen.width;\n    var screenHeight = win.screen.height;\n\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    var ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n    var edge = ua.indexOf('Edge/') >= 0;\n    var firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n    var windows = platform === 'Win32';\n    var electron = ua.toLowerCase().indexOf('electron') >= 0;\n    var macos = platform === 'MacIntel';\n\n    // iPadOs 13 fix\n    if (!ipad\n      && macos\n      && Support.touch\n      && (\n        (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n        || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n        || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n        || (screenWidth === 768 && screenHeight === 1024) // other\n      )\n    ) {\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\n      macos = false;\n    }\n\n    device.ie = ie;\n    device.edge = edge;\n    device.firefox = firefox;\n\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.ipod = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Webview\n    device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || win.navigator.standalone))\n      || (win.matchMedia && win.matchMedia('(display-mode: standalone)').matches);\n    device.webview = device.webView;\n    device.standalone = device.webView;\n\n    // Desktop\n    device.desktop = !(device.ios || device.android) || electron;\n    if (device.desktop) {\n      device.electron = electron;\n      device.macos = macos;\n      device.windows = windows;\n      if (device.macos) {\n        device.os = 'macos';\n      }\n      if (device.windows) {\n        device.os = 'windows';\n      }\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    var $targetEl = $(e.target);\n\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!$targetEl.closest(swiper.wrapperEl).length) { return; }\n    }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$targetEl.closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($targetEl.is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== $targetEl[0]\n      ) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n    var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    if (!params.cssMode) {\n      e.preventDefault();\n    }\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger || params.cssMode) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap click', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n          if (params.freeModeSticky) {\n            // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n            // It's easy to see this when simulating touch with mouse events. To fix this,\n            // limit single-slide swipes to the default slide duration. This also has the\n            // nice side effect of matching slide speed if the user stopped moving before\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n            // For faster swipes, also apply limits (albeit higher ones).\n            var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n            var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n            if (moveDistance < currentSlideSize) {\n              momentumDuration = params.speed;\n            } else if (moveDistance < 2 * currentSlideSize) {\n              momentumDuration = params.speed * 1.5;\n            } else {\n              momentumDuration = params.speed * 2.5;\n            }\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += (i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup)) {\n      var increment$1 = (i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n      if (typeof slidesGrid[i + increment$1] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment$1]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + increment$1] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    var increment = (stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + increment); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + increment); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n      if (!isNavButtonTarget) {\n        if (swiper.swipeDirection === 'next') {\n          swiper.slideTo(stopIndex + increment);\n        }\n        if (swiper.swipeDirection === 'prev') {\n          swiper.slideTo(stopIndex);\n        }\n      } else if (e.target === swiper.navigation.nextEl) {\n        swiper.slideTo(stopIndex + increment);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll () {\n    var swiper = this;\n    var wrapperEl = swiper.wrapperEl;\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop;\n    // eslint-disable-next-line\n    if (swiper.translate === -0) { swiper.translate = 0; }\n\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(swiper.translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  var dummyEventAttached = false;\n  function dummyEventListener() {}\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var capture = !!params.nested;\n\n    // Touch Events\n    if (!Support.touch && Support.pointerEvents) {\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n        el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        if (touchEvents.cancel) {\n          el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n        if (!dummyEventAttached) {\n          doc.addEventListener('touchstart', dummyEventListener);\n          dummyEventAttached = true;\n        }\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        el.addEventListener('mousedown', swiper.onTouchStart, false);\n        doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n        doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.addEventListener('click', swiper.onClick, true);\n    }\n    if (params.cssMode) {\n      wrapperEl.addEventListener('scroll', swiper.onScroll);\n    }\n\n    // Resize handler\n    if (params.updateOnWindowResize) {\n      swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n    } else {\n      swiper.on('observerUpdate', onResize, true);\n    }\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var capture = !!params.nested;\n\n    // Touch Events\n    if (!Support.touch && Support.pointerEvents) {\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        if (touchEvents.cancel) {\n          el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        el.removeEventListener('mousedown', swiper.onTouchStart, false);\n        doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.removeEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.removeEventListener('scroll', swiper.onScroll);\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var $el = swiper.$el;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n\n    // Get breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') { return; }\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var wasMultiRow = params.slidesPerColumn > 1;\n      var isMultiRow = breakpointParams.slidesPerColumn > 1;\n      if (wasMultiRow && !isMultiRow) {\n        $el.removeClass(((params.containerModifierClass) + \"multirow \" + (params.containerModifierClass) + \"multirow-column\"));\n      } else if (!wasMultiRow && isMultiRow) {\n        $el.addClass(((params.containerModifierClass) + \"multirow\"));\n        if (breakpointParams.slidesPerColumnFill === 'column') {\n          $el.addClass(((params.containerModifierClass) + \"multirow-column\"));\n        }\n      }\n\n      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      Utils.extend(swiper.params, breakpointParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n\n    var points = Object.keys(breakpoints).map(function (point) {\n      if (typeof point === 'string' && point.startsWith('@')) {\n        var minRatio = parseFloat(point.substr(1));\n        var value = win.innerHeight * minRatio;\n        return { value: value, point: point };\n      }\n      return { value: point, point: point };\n    });\n\n    points.sort(function (a, b) { return parseInt(a.value, 10) - parseInt(b.value, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var ref = points[i];\n      var point = ref.point;\n      var value = ref.value;\n      if (value <= win.innerWidth) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push('initialized');\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n      if (params.slidesPerColumnFill === 'column') {\n        suffixes.push('multirow-column');\n      }\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n\n    if (params.cssMode) {\n      suffixes.push('css-mode');\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var params = swiper.params;\n    var wasLocked = swiper.isLocked;\n    var lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n    if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n      swiper.isLocked = lastSlidePosition <= swiper.size;\n    } else {\n      swiper.isLocked = swiper.snapGrid.length === 1;\n    }\n\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  /* eslint no-param-reassign: \"off\" */\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/(function (SwiperClass) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl;\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        $wrapperEl = $(el.shadowRoot.querySelector((\".\" + (swiper.params.wrapperClass))));\n        // Children needs to return slot items\n        $wrapperEl.children = function (options) { return $el.children(options); };\n      } else {\n        $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n      }\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n            cancel: touch[3],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video, label',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass ) Swiper.__proto__ = SwiperClass;\n    Swiper.prototype = Object.create( SwiperClass && SwiperClass.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.changeDirection = function changeDirection (newDirection, needUpdate) {\n      if ( needUpdate === void 0 ) needUpdate = true;\n\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n      if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n        return swiper;\n      }\n\n      swiper.$el\n        .removeClass((\"\" + (swiper.params.containerModifierClass) + currentDirection))\n        .addClass((\"\" + (swiper.params.containerModifierClass) + newDirection));\n\n      swiper.params.direction = newDirection;\n\n      swiper.slides.each(function (slideIndex, slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n\n      swiper.emit('changeDirection');\n      if (needUpdate) { swiper.update(); }\n\n      return swiper;\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) { swiper.slideNext(); }\n        if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 34 || kc === 40) { swiper.slideNext(); }\n        if (kc === 33 || kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) { return; }\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) { return; }\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          var isHidden;\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n          if (isHidden === true) {\n            swiper.emit('navigationShow', swiper);\n          } else {\n            swiper.emit('navigationHide', swiper);\n          }\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop || !swiper.navigation) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n        if (swiper.params.cssMode && swiper.autoplay.running) { swiper.autoplay.run(); }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onVisibilityChange: function onVisibilityChange() {\n            if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n              swiper.autoplay.pause();\n            }\n            if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n              swiper.autoplay.run();\n              swiper.autoplay.paused = false;\n            }\n          },\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n          document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      touchEnd: function touchEnd() {\n        var swiper = this;\n        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.run();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n        document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Keyboard$1,\n    Navigation$1,\n    A11y,\n    Autoplay$1\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n}));\n//# sourceMappingURL=swiper.js.map\n","var navButton = document.querySelector(\".main-nav__button\");\nvar nav = document.querySelector(\".main-nav__content\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  if (navButton.classList.contains(\"main-nav__button--no-js\") && nav.classList.contains(\"main-nav__content--no-js\")) {\n    navButton.classList.remove(\"main-nav__button--no-js\");\n    nav.classList.remove(\"main-nav__content--no-js\");\n  }\n});\n\nnavButton.onclick = function (evt) {\n  evt.preventDefault();\n\n  if (!navButton.classList.contains(\"main-nav__button--close\") && !nav.classList.contains(\"main-nav__button--open\")) {\n    navButton.classList.add(\"main-nav__button--close\");\n    nav.classList.add(\"main-nav__content--open\");\n  } else {\n    navButton.classList.remove(\"main-nav__button--close\");\n    nav.classList.remove(\"main-nav__content--open\");\n  }\n};","var orderButtons = document.querySelectorAll(\".button--order\");\nvar modal = document.querySelector(\".modal\");\nvar overlay = document.querySelector(\".page__overlay\");\nvar modalFormInputS = document.querySelector(\".modal__form-input--s\");\n\norderButtons.forEach(function (button) {\n  button.onclick = function (evt) {\n    evt.preventDefault();\n\n    if (!modal.classList.contains(\"modal--open\") && !overlay.classList.contains(\"page__overlay--open\")) {\n      modal.classList.add(\"modal--open\");\n      overlay.classList.add(\"page__overlay--open\");\n      modalFormInputS.focus();\n    }\n  }\n});\n\noverlay.onclick = function (evt) {\n  if (modal.classList.contains(\"modal--open\") && overlay.classList.contains(\"page__overlay--open\")) {\n    modal.classList.remove(\"modal--open\");\n    overlay.classList.remove(\"page__overlay--open\");\n  }\n};\n\nwindow.addEventListener(\"keydown\", function (evt) {\n  if (evt.keyCode === 27) {\n    evt.preventDefault();\n\n    if (modal.classList.contains(\"modal--open\") && overlay.classList.contains(\"page__overlay--open\")) {\n      modal.classList.remove(\"modal--open\");\n      overlay.classList.remove(\"page__overlay--open\");\n    }\n  }\n});","var buttons = document.querySelector(\".reviews__buttons\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  if (buttons.classList.contains(\"reviews__buttons--no-js\")) {\n    buttons.classList.remove(\"reviews__buttons--no-js\");\n  }\n});\n\nvar swiper = new Swiper(\".swiper-container\", {\n  navigation: {\n    nextEl: \".reviews__button--next\",\n    prevEl: \".reviews__button--prev\",\n  },\n  loop: true,\n  autoplay: {\n    delay: 3000,\n  },\n  keyboard: {\n    enabled: true,\n  },\n  a11y: {\n    prevSlideMessage: \"Предыдущий слайд\",\n    nextSlideMessage: \"Следующий слайд\",\n    firstSlideMessage: \"Это первый слайд\",\n    lastSlideMessage: \"Это последний слайд\",\n  },\n});"]}